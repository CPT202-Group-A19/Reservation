<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cpt202a19.reservation.mapper.UserMapper">

    <resultMap id="UserEntityMap" type="com.cpt202a19.reservation.entity.User">
        <id column="uid" property="uid"/>
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO
            t_user (username, password, salt, phone, email, gender, avatar, is_delete, created_user, created_time, modified_user, modified_time)
        VALUES
        (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>
<<<<<<< HEAD
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username = #{username}
    </select>
     <!-- Update user's password based on uid：Integer updatePasswordByUid-->
=======
      <!-- Update user's password based on uid：Integer updatePasswordByUid-->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username = #{username}
    </select>
     <!-- Query user data based on user id：User findByUid(Integer uid) -->
>>>>>>> 01657420de04e445b55df4d61bcef89c175406e8
    <update id="updatePasswordByUid">
        UPDATE t_user SET password = #{password}, modified_user = #{modifiedUser}, modified_time = #{modifiedTime} WHERE uid = #{uid}
    </update>

<<<<<<< HEAD
    <!-- Query user data based on user id：User findByUid(Integer uid) -->
=======
    <!-- 根据用户id查询用户数据：User findByUid(Integer uid) -->
>>>>>>> 01657420de04e445b55df4d61bcef89c175406e8
    <select id="findByUid" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE uid = #{uid}
    </select>

<<<<<<< HEAD
    <!-- Update user profile based on uid：Integer updateInfoByUid(User user)(Check that the following three are not empty before they can be modified) -->
=======
   <!-- Update user profile based on uid：Integer updateInfoByUid(User user)(Check that the following three are not empty before they can be modified) -->
>>>>>>> 01657420de04e445b55df4d61bcef89c175406e8
    <update id="updateInfoByUid">
        UPDATE t_user SET
        <if test="phone != null">phone = #{phone},</if>
        <if test="email != null">email = #{email},</if>
        <if test="gender != null">gender = #{gender},</if>
        modified_user = #{modifiedUser},
        modified_time = #{modifiedTime}
        WHERE uid = #{uid}
    </update>

<<<<<<< HEAD
    <!-- Update user's avatar based on uid-->
=======
      <!-- Update user's avatar based on uid-->
>>>>>>> 01657420de04e445b55df4d61bcef89c175406e8
    <update id="updateAvatarByUid">
        UPDATE t_user SET
        avatar = #{avatar},
        modified_user = #{modifiedUser},
        modified_time = #{modifiedTime}
        WHERE uid = #{uid}
    </update>

<<<<<<< HEAD
</mapper>    
=======
</mapper>
>>>>>>> 01657420de04e445b55df4d61bcef89c175406e8
